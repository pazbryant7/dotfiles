#!/usr/bin/env sh

set -e

# Configuration
BSPWMRC="$HOME/.config/bspwm/bspwmrc"
THEME_RASI="$HOME/.config/rofi/theme.rasi"
TMUX_CONFIG="$HOME/.tmux.conf"
XRESOURCES="$HOME/.Xresources"
ALACRITTY_CONFIG="$HOME/.config/alacritty/alacritty.toml"
DUNSTRC="$HOME/.config/dunst/dunstrc"
STARSHIP_TOML="$HOME/.config/starship/starship.toml"

# Function to select a color using xcolor
select_color() {
	notify-send "picking color"

	xcolor || {
		echo "Failed to select color" >&2
		exit 1
	}
}

# Function to update config files with better error handling
update() {
	file="$1"
	pattern="$2"
	replacement="$3"

	if [ ! -f "$file" ]; then
		echo "Warning: File not found: $file" >&2
		return 1
	fi

	if sed -i "s|$pattern|$replacement|" "$file"; then
		return 0
	else
		echo "Error: Failed to update $file" >&2
		return 1
	fi
}

# Update functions for each configuration file
overwrite_bspwm_colors() {
	color="$1"
	update "$BSPWMRC" \
		'focused_border_color "#[0-9a-fA-F]\{6\}"' \
		"focused_border_color \"$color\""
}

overwrite_rofi_colors() {
	color="$1"
	update "$THEME_RASI" \
		'background-alt:\s*#[0-9a-fA-F]\{6\};' \
		"background-alt:\t\t\t$color;"
}

overwrite_tmux_colors() {
	color="$1"
	update "$TMUX_CONFIG" \
		"set-option -g status-style 'bg=#1e1e2e,fg=#[0-9a-fA-F]\{6\}'" \
		"set-option -g status-style 'bg=#1e1e2e,fg=$color'"
}

overwrite_xresources_colors() {
	color="$1"
	update "$XRESOURCES" 'st.cursorColor:[[:space:]]*#[0-9a-fA-F]\{6\}' "st.cursorColor: $color" || true
	update "$XRESOURCES" 'dwm.selbgcolor: #[0-9a-fA-F]\{6\}' "dwm.selbgcolor: $color" || true
	update "$XRESOURCES" 'dwm.selbordercolor: #[0-9a-fA-F]\{6\}' "dwm.selbordercolor: $color" || true
}

overwrite_alacritty_colors() {
	color="$1"
	update "$ALACRITTY_CONFIG" \
		'cursor = "#[0-9a-fA-F]\{6\}"' \
		"cursor = \"$color\""
}

overwrite_dunst_colors() {
	color="$1"
	update "$DUNSTRC" \
		'background = "#[0-9a-fA-F]\{6\}"' \
		"background = \"$color\""
}

overwrite_starship_colors() {
	color="$1"

	# Update error_symbol with color in parentheses
	update "$STARSHIP_TOML" \
		'error_symbol = "\[✗\](#[0-9a-fA-F]\{6\})"' \
		"error_symbol = \"[✗]($color)\"" || true

	# Update success_symbol with color in parentheses
	update "$STARSHIP_TOML" \
		'success_symbol = "\[󰁕\](#[0-9a-fA-F]\{6\})"' \
		"success_symbol = \"[󰁕]($color)\"" || true

	# Update vimcmd_symbol with color in parentheses
	update "$STARSHIP_TOML" \
		'vimcmd_symbol = "\[#\](#[0-9a-fA-F]\{6\})"' \
		"vimcmd_symbol = \"[#]($color)\"" || true

	# Update directory style with custom color (detect hex color, keep bold)
	update "$STARSHIP_TOML" \
		'style = "bold #[0-9a-fA-F]\{6\}"' \
		"style = \"bold $color\"" || true
}

# Reload services after configuration updates
reload_services() {
	# Reload Xresources and signal st terminals
	if [ -f "$XRESOURCES" ]; then
		if xrdb -merge "$XRESOURCES"; then
			pgrep -x st | while IFS= read -r pid; do
				kill -USR1 "$pid" 2>/dev/null || echo "Warning: Failed to signal st PID: $pid"
			done
		else
			echo "Warning: xrdb -merge failed" >&2
		fi
	fi

	# Reload qutebrowser
	pgrep -x qutebrowser >/dev/null && qutebrowser :config-source

	# Reload dunst
	if pgrep -x dunst >/dev/null; then
		pkill dunst
		while pgrep -x dunst >/dev/null; do
			sleep 0.1
		done
	fi

	# Reload bspwm
	if pgrep -x bspwm >/dev/null; then
		bspc wm -r || echo "Warning: Failed to reload bspwm" >&2
	fi

	# Reload dwm
	pgrep -x dwm >/dev/null && xsetroot -name "fsignal:1" || echo "Warning: Failed to signal dwm" >&2

	if pgrep tmux >/dev/null; then
		tmux source-file "${HOME}/.tmux.conf" || echo "Failed to reload tmux configuration"
	fi
}

# Validate hex color format
validate_color() {
	echo "$1" | grep -qE '^#[0-9a-fA-F]{6}$'
}

# Main function
main() {
	selected_color=""

	if [ -n "$1" ]; then
		selected_color="$1"
	else
		selected_color=$(select_color)
	fi

	if [ -z "$selected_color" ]; then
		echo "Error: No color selected or provided. Exiting." >&2
		exit 1
	fi

	if ! validate_color "$selected_color"; then
		echo "Error: Invalid color format: $selected_color. Expected #RRGGBB." >&2
		exit 1
	fi

	# Update all configuration files
	overwrite_rofi_colors "$selected_color"
	overwrite_bspwm_colors "$selected_color"
	overwrite_dunst_colors "$selected_color"
	overwrite_tmux_colors "$selected_color"
	overwrite_starship_colors "$selected_color"
	overwrite_alacritty_colors "$selected_color"
	overwrite_xresources_colors "$selected_color"

	# Reload services
	reload_services

	echo "Theme updated successfully with color $selected_color"
}

main "$@"
